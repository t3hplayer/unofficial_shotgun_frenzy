///////////////////////////////////////////////////

// f_VMen.acs
// calls the vote menu

#library "f_VMen"
#import "f_IntDB.acs"
#import "f_PMenP.acs"
#include "zcommon.acs"

// include external scripts





// detect players input (1= Up, 2= Down, 3= Use)
function int p_MenuInput (void)
{
    // to return
    int l_Input;
    
    // key scanning
    if (getplayerinput(playernumber(), INPUT_FORWARDMOVE) > 0)      l_Input = 1;
    if (getplayerinput(playernumber(), INPUT_FORWARDMOVE) < 0)      l_Input = 2;
    if (getplayerinput(playernumber(), INPUT_BUTTONS) & BT_USE)     l_Input = 3;
    
    return l_Input;
}

// purge the menu
function void p_MenuReveal_Purge (void)
{
    // purge it all! muahahahaha
    p_MenuSlot[playernumber()][0] = 0;
    p_MenuSlot[playernumber()][1] = 0;
    p_MenuSlot[playernumber()][2] = 0;
    p_MenuSlot[playernumber()][3] = 0;
    p_MenuSlot[playernumber()][4] = 0;
    p_MenuSlot[playernumber()][5] = 0;
    p_MenuSlot[playernumber()][6] = 0;
    p_MenuSlot[playernumber()][7] = 0;
    
    // remove text
    for(int a = 0; a < 16; a++)
    {
        hudmessage(s:""; 0, 20 + a, cr_White, 0.1, 0.1, 0.1);
    }
    
    hudmessage(s:""; 0, 38, cr_White, 0.1, 0.1, 0.1);
    hudmessage(s:""; 0, 50, cr_White, 0.1, 0.1, 0.1);
}

// change the menus category
function void p_MenuReveal_ChangeCategory (int l_Category)
{
    // change category
    p_MenuSelection_Category[playernumber()] = l_Category;
    
    // reset selection values
    p_MenuSelection[playernumber()] = -1;
    // ***** NICE VALUES GO HERE IF NEEDED *****
}

// reveals a button
function void p_MenuReveal_Button (str l_Name, int l_ItemID, str l_SpecialNumber)
{
    // setup hud size and font
    sethudsize(s_ScreenSize[0], s_ScreenSize[1], s_ScreenSize[2]);
    setfont("CONFONT");
    
    // set to slot
    for(int a = 0; a < 8; a++)
    {
        if (p_MenuSlot[playernumber()][a] == 0)
        {
            p_MenuSlot[playernumber()][a] = l_ItemID;
            if (l_ItemID < 100)
            {
                if (f_Price[l_ItemID] > p_Credits[playernumber()])
                {
                    hudmessage(s:l_Name; 0, 29 + a, cr_Red, 290.1, f_MenuSlot_Y[a], f_MenuHold);
                    hudmessage(s:"\n$", d:f_Price[l_ItemID], s:" - Not enough credits..."; 0, 20 + a, cr_Red, 290.1, f_MenuSlot_Y[a], f_MenuHold);
                }
                else
                {
                    hudmessage(s:l_Name; 0, 29 + a, cr_Cream, 290.1, f_MenuSlot_Y[a], f_MenuHold);
                    hudmessage(s:"\n$", d:f_Price[l_ItemID]; 0, 20 + a, cr_White, 290.1, f_MenuSlot_Y[a], f_MenuHold);
                }
            }
            else if (l_ItemID < 200)
                hudmessage(s:l_Name; 0, 29 + a, cr_White, 290.1, f_MenuSlot_Y[a], f_MenuHold);
                
            else if (l_ItemID < 300)
            {
                if (p_Exp_Points[playernumber()] >= l_SpecialNumber)
                {
                    hudmessage(s:l_Name; 0, 29 + a, cr_Cream, 290.1, f_MenuSlot_Y[a], f_MenuHold);
                    hudmessage(s:"\n", d:l_SpecialNumber, s:" Upgrade Points Required..."; 0, 20 + a, cr_White, 290.1, f_MenuSlot_Y[a], f_MenuHold);
                }
                else
                {
                    hudmessage(s:l_Name; 0, 29 + a, cr_Red, 290.1, f_MenuSlot_Y[a], f_MenuHold);
                    hudmessage(s:"\n", d:l_SpecialNumber, s:" Upgrade Points Required..."; 0, 20 + a, cr_Red, 290.1, f_MenuSlot_Y[a], f_MenuHold);
                }
            }
                
            else if (l_ItemID < 400)
            {
                hudmessage(s:l_Name; 0, 29 + a, cr_Cream, 290.1, f_MenuSlot_Y[a], f_MenuHold);
                hudmessage(s:"\n+", d:l_SpecialNumber, s:" cash added!"; 0, 20 + a, cr_White, 290.1, f_MenuSlot_Y[a], f_MenuHold);
            }
            else if (l_ItemID > 404)
            {
                hudmessage(s:l_Name; 0, 29 + a, cr_Blue, 290.1, f_MenuSlot_Y[a], f_MenuHold);
            }
           // else if (l_ItemID > 400)
           // {
                //hudmessage(s:l_Name; 0, 29 + a, cr_Red, 290.1, f_MenuSlot_Y[a], f_MenuHold);
                //hudmessage(s:"\n$", d:f_Price[l_ItemID], s:" - Not enough credits..."; 0, 20 + a, cr_Red, 290.1, f_MenuSlot_Y[a], f_MenuHold);
            //}
            else
            {
                hudmessage(s:l_Name; 0, 29 + a, cr_Cream, 290.1, f_MenuSlot_Y[a], f_MenuHold);
                hudmessage(s:"\n$", d:f_Price[l_ItemID]; 0, 20 + a, cr_White, 290.1, f_MenuSlot_Y[a], f_MenuHold);
            }
            break;
        }
    }
}

function void p_MenuReveal (int l_InputType, int l_Category)
{
    // create limit local
    int l_Limit;
    
    // set category
    if (l_Category >= 0)      p_MenuSelection_Category[playernumber()] = l_Category;
    
    // compute inputs and switch menus
    if (l_InputType == 1)   p_MenuSelection[playernumber()] --;
    if (l_InputType == 2)   p_MenuSelection[playernumber()] ++;
    
    
    
    // get limit
    for(int a = 0; a < 8; a++)
    {
        if (p_MenuSlot[playernumber()][a] == 0)
        {
            l_Limit = a - 1;
            break;
        }
    }
    
    
    // check limits
    if (p_MenuSelection[playernumber()] > l_Limit)      p_MenuSelection[playernumber()] = 0;
    if (p_MenuSelection[playernumber()] < 0)            p_MenuSelection[playernumber()] = l_Limit;
    
    
    if (l_InputType == 3)
    {
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 34)      p_MenuPurchase_Weapon ("SSG", "Quadshot", "SSG", 0);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 35)      p_MenuPurchase_Weapon ("Buckshot", "Spitter", "Spitter", 0);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 36)      p_MenuPurchase_Weapon ("Stocker", "Healer", "Healer", 0);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 25)      p_MenuPurchase_Weapon ("Dualshot", "Repeater", "Repeater", 0);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 37)      p_MenuPurchase_Weapon ("Launcher", "Flinger", "Launcher", 0);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 38)      p_MenuPurchase_Weapon ("PlasmaGun", "Railgun", "PlasmaGun", 0);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 39)      p_MenuPurchase_Weapon ("Flamer", "Flamer", "Flamer", 0);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 72)      p_MenuPurchase_Weapon ("BFG", "BFG", "BFG", 0);
            
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 19)      p_MenuPurchase_Inventory ("Inventory_Soulsphere", 0);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 20)      p_MenuPurchase_Inventory ("Inventory_Megasphere", 0);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 21)      p_MenuPurchase_Inventory ("Inventory_Godsphere", 0);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 22)      p_MenuPurchase_Inventory ("Inventory_Berserk2", 0);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 23)      p_MenuPurchase_Inventory ("Backpack", 0);
	
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 92)      p_MenuPurchase_Inventory ("Inventory_HealthDispenser", 0);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 93)      p_MenuPurchase_Inventory ("Inventory_AmmoDispenser", 0);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 94)      p_MenuPurchase_Inventory ("Inventory_MarineMine", 0);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 95)      p_MenuPurchase_Inventory ("Inventory_TurretBullet", 0);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 96)      p_MenuPurchase_Inventory ("Inventory_TurretRocket", 0);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 97)      p_MenuPurchase_Inventory ("Inventory_TurretPlasma", 0);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 98)      p_MenuPurchase_Inventory ("Inventory_TurretRail", 0);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 99)      p_MenuPurchase_Inventory ("Inventory_TurretFlame", 0);
            
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 49)      p_MenuPurchase_Inventory ("Inventory_MineDrone", 0);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 50)      p_MenuPurchase_Inventory ("Inventory_SawDrone", 0);
            //if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 51)      p_MenuPurchase_Inventory ("Inventory_TurretDrone", 0);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 52 && p_TankSlot[playernumber()] == 0)       p_MenuPurchase_Script (305, 0, 0, 0, 0);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 58 && p_TankSlot[playernumber()] == 1)       p_MenuPurchase_Script (306, 0, 0, 0, 1);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 59 && p_TankSlot[playernumber()] == 2)       p_MenuPurchase_Script (307, 0, 0, 0, 1);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 70 && p_TankSlot[playernumber()] == 2)       p_MenuPurchase_Script (308, 0, 0, 0, 1);
	
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 86)       p_MenuPurchase_Script (421, 0, 0, 0, 1);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 91)       p_MenuPurchase_Script (422, 0, 0, 0, 1);
            
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 100)     p_MenuReveal_ChangeCategory(0);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 101)     p_MenuReveal_ChangeCategory(1);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 102)     p_MenuReveal_ChangeCategory(2);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 103)     p_MenuReveal_ChangeCategory(3);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 104)     p_MenuReveal_ChangeCategory(4);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 105)     p_MenuReveal_ChangeCategory(5);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 106)     p_MenuReveal_ChangeCategory(6);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 107)     p_MenuReveal_ChangeCategory(7);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 108)     p_MenuReveal_ChangeCategory(8);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 109)     p_MenuReveal_ChangeCategory(9);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 110)     p_MenuReveal_ChangeCategory(10);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 111)     p_MenuReveal_ChangeCategory(11);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 112)     p_MenuReveal_ChangeCategory(12);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 113)     p_MenuReveal_ChangeCategory(13);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 114)     p_MenuReveal_ChangeCategory(13);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 115)     p_MenuReveal_ChangeCategory(14);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 116)     p_MenuReveal_ChangeCategory(15);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 117)     p_MenuReveal_ChangeCategory(16);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 118)     p_MenuReveal_ChangeCategory(17);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 119)     p_MenuReveal_ChangeCategory(18);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 120)     p_MenuReveal_ChangeCategory(19);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 121)     p_MenuReveal_Kill();        // kills the menu
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 122)     p_MenuReveal_ChangeCategory(25);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 123)     p_MenuReveal_ChangeCategory(26);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 124)     p_MenuReveal_ChangeCategory(27);
            
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 201)
              p_MenuPurchase_Upgrade ("Boomstick", "Boomstick_Bayonet", 0, 1);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 202)
              p_MenuPurchase_Upgrade ("Boomstick", "Boomstick_Explosive", 0, 1);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 203)
              p_MenuPurchase_Upgrade ("SSG", "SSG_Autoload", 0, 1);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 204)
              p_MenuPurchase_Upgrade ("SSG", "SSG_Explosive", 0, 1);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 205)
              p_MenuPurchase_Upgrade ("Quadshot", "Quadshot_Bayonet", 0, 2);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 206)
              p_MenuPurchase_Upgrade ("Quadshot", "Quadshot_Explosive", 0, 2);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 207)
              p_MenuPurchase_Upgrade ("Buckshot", "Buckshot_Chamber", 0, 3);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 208)
              p_MenuPurchase_Upgrade ("Buckshot", "Buckshot_Explosive", 0, 3);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 209)     
              p_MenuPurchase_Upgrade ("Spitter", "Spitter_SSG", 0, 2);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 210)
              p_MenuPurchase_Upgrade ("Spitter", "Spitter_GLauncher", 0, 2);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 211)
              p_MenuPurchase_Upgrade ("Launcher", "Launcher_Multi", 0, 1);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 212)
              p_MenuPurchase_Upgrade ("Launcher", "Launcher_Exploder", 0, 3);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 213)
              p_MenuPurchase_Upgrade ("Flinger", "Flinger_Expander", 0, 3);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 214)
              p_MenuPurchase_Upgrade ("Flinger", "Flinger_MinePlacer", 0, 1);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 215)
              p_MenuPurchase_Upgrade ("Railgun", "Railgun_Taser", 0, 1);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 216)
              p_MenuPurchase_Upgrade ("Railgun", "Railgun_Slug", 0, 1);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 217)
              p_MenuPurchase_Upgrade ("PlasmaGun", "PlasmaGun_Advanced", 0, 1);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 218)
              p_MenuPurchase_Upgrade ("PlasmaGun", "PlasmaGun_Spread", 0, 1);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 219)
              p_MenuPurchase_Upgrade ("Dualshot", "Dualshot_Razor", 0, 2);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 220)
              p_MenuPurchase_Upgrade ("Repeater", "Repeater_DoubleSpeed", 0, 3);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 221)
              p_MenuPurchase_Upgrade ("Repeater", "Repeater_BlastShells", 0, 2);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 222)
              p_MenuPurchase_Upgrade ("BFG", "BFGS", 0, 2);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 223)
              p_MenuPurchase_Upgrade ("Flamer", "FlamerS", 0, 2);
            
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 301)      p_MenuPurchase_Recycle ("SSG", 700);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 302)      p_MenuPurchase_Recycle ("SSG_Autoload", 1000);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 303)      p_MenuPurchase_Recycle ("SSG_Explosive", 1000);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 304)      p_MenuPurchase_Recycle ("Quadshot", 700);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 305)      p_MenuPurchase_Recycle ("Quadshot_Bayonet", 3000);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 306)      p_MenuPurchase_Recycle ("Quadshot_Explosive", 3000);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 307)      p_MenuPurchase_Recycle ("Spitter", 700);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 308)      p_MenuPurchase_Recycle ("Spitter_SSG", 1000);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 309)      p_MenuPurchase_Recycle ("Spitter_GLauncher", 1000);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 310)      p_MenuPurchase_Recycle ("Buckshot", 700);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 311)      p_MenuPurchase_Recycle ("Buckshot_Chamber", 1000);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 312)      p_MenuPurchase_Recycle ("Buckshot_Explosive", 1000);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 313)      p_MenuPurchase_Recycle ("Launcher", 1500);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 314)      p_MenuPurchase_Recycle ("Launcher_Multi", 2000);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 315)      p_MenuPurchase_Recycle ("Launcher_Exploder", 2000);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 316)      p_MenuPurchase_Recycle ("Flinger", 1500);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 317)      p_MenuPurchase_Recycle ("Flinger_Expander", 2000);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 318)      p_MenuPurchase_Recycle ("Flinger_MinePlacer", 2000);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 319)      p_MenuPurchase_Recycle ("Railgun", 1500);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 320)      p_MenuPurchase_Recycle ("Railgun_Taser", 2000);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 321)      p_MenuPurchase_Recycle ("Railgun_Slug", 2000);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 322)      p_MenuPurchase_Recycle ("PlasmaGun", 1500);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 323)      p_MenuPurchase_Recycle ("PlasmaGun_Advanced", 2000);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 324)      p_MenuPurchase_Recycle ("PlasmaGun_Spread", 2000);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 325)      p_MenuPurchase_Recycle ("Flamer", 2500);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 326)      p_MenuPurchase_Recycle ("Dualshot", 2600);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 327)      p_MenuPurchase_Recycle ("Dualshot_Razor", 3200);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 328)      p_MenuPurchase_Recycle ("Repeater", 2600);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 329)      p_MenuPurchase_Recycle ("Repeater_DoubleSpeed", 3200);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 330)      p_MenuPurchase_Recycle ("Repeater_BlastShells", 3200);
            
            
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 401)       p_MenuPurchase_ScriptBarricade (1, 51, f_Price[401]);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 402)       p_MenuPurchase_ScriptBarricade (1, 52, f_Price[402]);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 403)       p_MenuPurchase_ScriptBarricade (1, 53, f_Price[403]);
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 404)       p_MenuPurchase_ScriptBarricade (1, 54, f_Price[404]);
            
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 405)       { teleport_nostop(121, 0, 0); p_MenuReveal_Kill(); }
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 406)       { teleport_nostop(122, 0, 0); p_MenuReveal_Kill(); }
            if (p_MenuSlot[playernumber()][p_MenuSelection[playernumber()]] == 407)       { teleport_nostop(123, 0, 0); p_MenuReveal_Kill(); }
            //Leave 408 empty.  We'll use it to put notes in the menu
    }
    
    // purge menu
    p_MenuReveal_Purge();
    
    // setup hud size
    sethudsize(s_ScreenSize[0], s_ScreenSize[1], s_ScreenSize[2]);
    
    // check pointer
    if (p_MenuSelection[playernumber()] == -1)      p_MenuSelection[playernumber()] = 0;
    
    // show pointer
    setfont("CONFONT");
    hudmessage(s:">"; 0, 38, cr_Red, 240.1, f_MenuSlot_Y[p_MenuSelection[playernumber()]], f_MenuHold);
    
    // display background
    sethudsize(s_ScreenSize[0], s_ScreenSize[1], s_ScreenSize[2]);
    setfont("PBUY");
    hudmessage(s:"a"; 0, 50, 0, 0.1, 0.1, 20.0);
    
    
    // menu code
    if (p_MenuSelection_Category[playernumber()] == 1)     // ARMORY
    {
        p_MenuReveal_Button("Main Weapons", 102, 0);
        if (c_Techflag[26] == 1)                 p_MenuReveal_Button("Advanced Weapons", 103, 0);
        if (c_Techflag[27] == 1)                 p_MenuReveal_Button("Super Weapons", 113, 0);
        p_MenuReveal_Button("Upgrade Weapons", 104, 0);
        p_MenuReveal_Button("Recycle Weapons", 109, 0);
        p_MenuReveal_Button("Extra items", 122, 0);
        p_MenuReveal_Button("Exit", 121, 0);
    }
    if (p_MenuSelection_Category[playernumber()] == 2)     // PHASE 1 WEAPONS
    {
        if (p_MenuReveal_CheckPack(1) == 0)      p_MenuReveal_Button("Shotgunner Backpack", 34, 0);
        if (p_MenuReveal_CheckPack(2) == 0)      p_MenuReveal_Button("Assault Backpack", 35, 0);
        if (p_MenuReveal_CheckPack(3) == 0)      p_MenuReveal_Button("Support Backpack", 36, 0);
        p_MenuReveal_Button("Back", 101, 0);
        p_MenuReveal_Button("Exit", 121, 0);
    }
    if (p_MenuSelection_Category[playernumber()] == 3)     // PHASE 2 WEAPONS
    {
        if (p_MenuReveal_CheckPack(7) == 0)      p_MenuReveal_Button("Commando Backpack", 25, 0);
        if (p_MenuReveal_CheckPack(4) == 0)      p_MenuReveal_Button("Heavy Backpack", 37, 0);
        if (p_MenuReveal_CheckPack(5) == 0)      p_MenuReveal_Button("Plasma Backpack", 38, 0);
        p_MenuReveal_Button("Back", 101, 0);
        p_MenuReveal_Button("Exit", 121, 0);
    }
    if (p_MenuSelection_Category[playernumber()] == 13)     // PHASE 2 WEAPONS PART 2
    {
        if (c_Techflag[27] == 1)                 if (p_MenuReveal_CheckPack(6) == 0)      p_MenuReveal_Button("Flamethrower", 39, 0);
        if (c_Techflag[27] == 1)                 if (checkinventory("BFG") == 0)      p_MenuReveal_Button("BFG9000", 72, 0);
        //408 does nothing.  KEEP IT THAT WAY.  USE 408 for NOTES
        p_MenuReveal_Button("Super weapons now have upgrades",408,0);
        p_MenuReveal_Button("Back", 101, 0);
        p_MenuReveal_Button("Exit", 121, 0);
    }
    if (p_MenuSelection_Category[playernumber()] == 4)     // UPGRADE
    {
        p_MenuReveal_Button("Shotguns", 105, 0);
        p_MenuReveal_Button("Assault", 106, 0);
        p_MenuReveal_Button("Heavy", 107, 0);
        p_MenuReveal_Button("Plasma", 108, 0);
        p_MenuReveal_Button("Super", 124, 0);
        p_MenuReveal_Button("Back", 101, 0);
        p_MenuReveal_Button("Exit", 121, 0);
    }
    if (p_MenuSelection_Category[playernumber()] == 25)     // BATTLEFIELD DEPLOYABLES
    {
        if (c_Techflag[29] == 0 && checkinventory("Backpack") == 0)                 p_MenuReveal_Button("Personal Backpack", 23, 0);
        if (checkinventory("Inventory_HealthDispenser") < 3){
        	p_MenuReveal_Button("Health Dispenser", 92, 0);
        }
        if (checkinventory("Inventory_AmmoDispenser") < 3){
        	p_MenuReveal_Button("Ammo Dispenser", 93, 0);
        }
        p_MenuReveal_Button("Personal Mine", 94, 0);
        	p_MenuReveal_Button("Personal Turrets", 123, 0);
        	p_MenuReveal_Button("Back", 101, 0);
        	p_MenuReveal_Button("Exit", 121, 0);
       }

    if (p_MenuSelection_Category[playernumber()] == 26)     // BATTLEFIELD DEPLOYABLES: TURRETS
    {
        if (checkinventory("Inventory_TurretBullet") < 3){
        	p_MenuReveal_Button("Bullet Turret", 95, 0);
        }
        if (checkinventory("Inventory_TurretRocket") < 3){
        	p_MenuReveal_Button("Rocket Turret", 96, 0);
        }
        if (checkinventory("Inventory_TurretPlasma") < 3){
        	p_MenuReveal_Button("Plasma Turret", 97, 0);
        }
        //if (checkinventory("Inventory_TurretRail") < 3){
        //	p_MenuReveal_Button("Rail Turret", 98, 0);
        //}
        if (checkinventory("Inventory_TurretFlame") < 3){
        	p_MenuReveal_Button("FLAME Turret", 99, 0);
        }
        	p_MenuReveal_Button("Back", 122, 0);
    }
    if (p_MenuSelection_Category[playernumber()] == 5)     // UPGRADE 1
    {
        if (checkinventory("Boomstick_Bayonet") == 0 && checkinventory("Boomstick_Explosive") == 0)
          p_MenuReveal_Button("Boomstick Bayonet", 201, 1);
        if (checkinventory("Boomstick_Bayonet") == 0 && checkinventory("Boomstick_Explosive") == 0)
          p_MenuReveal_Button("Boomstick Explosive Shells", 202, 1);
        if (p_MenuReveal_CheckPack(1) > 0 &&
            checkinventory("SSG_Autoload") == 0 &&
            checkinventory("SSG_Explosive") == 0)
          p_MenuReveal_Button("SSG Autoload", 203, 1);
        if (p_MenuReveal_CheckPack(1) > 0 &&
            checkinventory("SSG_Autoload") == 0 &&
            checkinventory("SSG_Explosive") == 0)
          p_MenuReveal_Button("SSG Explosive Shells", 204, 1);
        if (p_MenuReveal_CheckPack(1) > 0 && 
            checkinventory("Quadshot_Bayonet") == 0 &&
            checkinventory("Quadshot_Explosive") == 0)
          p_MenuReveal_Button("Qshot Bayonet + Speed Loading", 205, 2);
        if (p_MenuReveal_CheckPack(1) > 0 && 
            checkinventory("Quadshot_Bayonet") == 0 && 
            checkinventory("Quadshot_Explosive") == 0)
          p_MenuReveal_Button("Qshot Explosive + Speed Loading", 206, 2);
        p_MenuReveal_Button("Back", 104, 0);
    }
    if (p_MenuSelection_Category[playernumber()] == 6)     // UPGRADE 2
    {
        if (p_MenuReveal_CheckPack(2) > 0 && checkinventory("Buckshot_Chamber") == 0 && checkinventory("Buckshot_Explosive") == 0)      p_MenuReveal_Button("Bshot Chamber Extention + Speed Loading", 
207, 3);
        if (p_MenuReveal_CheckPack(2) > 0 && checkinventory("Buckshot_Chamber") == 0 && checkinventory("Buckshot_Explosive") == 0)      p_MenuReveal_Button("Bshot Explosive Shells + Speed Loading", 208, 
3);
        if (p_MenuReveal_CheckPack(2) > 0 && checkinventory("Spitter_SSG") == 0 && checkinventory("Spitter_GLauncher") == 0)        p_MenuReveal_Button("Spitter SSG", 209, 2);
        if (p_MenuReveal_CheckPack(2) > 0 && checkinventory("Spitter_SSG") == 0 && checkinventory("Spitter_GLauncher") == 0)        p_MenuReveal_Button("Spitter Grenade Launcher", 210, 2);
        p_MenuReveal_Button("Back", 104, 0);
    }
    if (p_MenuSelection_Category[playernumber()] == 7)     // UPGRADE 3
    {
        if (p_MenuReveal_CheckPack(7) > 0 && checkinventory("Dualshot_Razor") == 0)        p_MenuReveal_Button("Dualshot Razorblade Thrower", 219, 2);
        if (p_MenuReveal_CheckPack(7) > 0 && checkinventory("Repeater_DoubleSpeed") == 0 && checkinventory("Repeater_BlastShells") == 0)        p_MenuReveal_Button("Repeater Speed x2", 220, 3);
     
        if (p_MenuReveal_CheckPack(7) > 0 && checkinventory("Repeater_DoubleSpeed") == 0 && checkinventory("Repeater_BlastShells") == 0)        p_MenuReveal_Button("Repeater Plasma Shells", 221, 2);
        if (p_MenuReveal_CheckPack(4) > 0 && checkinventory("Launcher_Multi") == 0 && checkinventory("Launcher_Exploder") == 0)         p_MenuReveal_Button("Launcher Spread", 211, 1);
        if (p_MenuReveal_CheckPack(4) > 0 && checkinventory("Launcher_Multi") == 0 && checkinventory("Launcher_Exploder") == 0)         p_MenuReveal_Button("Launcher Exploder Rockets", 212, 3);
        if (p_MenuReveal_CheckPack(4) > 0 && checkinventory("Flinger_Expander") == 0 && checkinventory("Flinger_MinePlacer") == 0)      p_MenuReveal_Button("Flinger Expander Rounds", 213, 3);
        if (p_MenuReveal_CheckPack(4) > 0 && checkinventory("Flinger_Expander") == 0 && checkinventory("Flinger_MinePlacer") == 0)      p_MenuReveal_Button("Flinger Mine Placer", 214, 1);
        p_MenuReveal_Button("Back", 104, 0);
    }
    if (p_MenuSelection_Category[playernumber()] == 8)     // UPGRADE 4
    {
        if (p_MenuReveal_CheckPack(5) > 0 && checkinventory("Railgun_Taser") == 0 && checkinventory("Railgun_Slug") == 0)                    p_MenuReveal_Button("Railgun Taser", 215, 1);
        if (p_MenuReveal_CheckPack(5) > 0 && checkinventory("Railgun_Taser") == 0 && checkinventory("Railgun_Slug") == 0)                    p_MenuReveal_Button("Railgun Slug-Shotgun", 216, 1);
        if (p_MenuReveal_CheckPack(5) > 0 && checkinventory("PlasmaGun_Advanced") == 0 && checkinventory("PlasmaGun_Spread") == 0)           p_MenuReveal_Button("Plasma Rifle Advanced", 217, 1);
        if (p_MenuReveal_CheckPack(5) > 0 && checkinventory("PlasmaGun_Advanced") == 0 && checkinventory("PlasmaGun_Spread") == 0)           p_MenuReveal_Button("Plasma Rifle Spread", 218, 1);
        p_MenuReveal_Button("Back", 104, 0);
    }
    if (p_MenuSelection_Category[playernumber()] == 27)     // UPGRADE SUPER
    {
        if (checkinventory("BFG") == 1)                    p_MenuReveal_Button("BFG Exploder", 222, 2);
        if (checkinventory("Flamer") == 1)                    p_MenuReveal_Button("Flamer Penetrator", 223, 2);
        p_MenuReveal_Button("Back", 104, 0);
    }
    if (p_MenuSelection_Category[playernumber()] == 9)     // RECYCLE
    {
        if (checkinventory("SSG") == 1)                    p_MenuReveal_Button("SSG", 301, 700);
        if (checkinventory("SSG_Autoload") == 1)           p_MenuReveal_Button("SSG (Autoload)", 302, 1000);
        if (checkinventory("SSG_Explosive") == 1)          p_MenuReveal_Button("SSG (Explosive)", 303, 1000);
        if (checkinventory("Quadshot") == 1)               p_MenuReveal_Button("Quadshot", 304, 700);
        if (checkinventory("Quadshot_Bayonet") == 1)       p_MenuReveal_Button("Quadshot (Bayonet)", 305, 3000);
        if (checkinventory("Quadshot_Explosive") == 1)     p_MenuReveal_Button("Quadshot (Explosive)", 306, 3000);
        if (checkinventory("Spitter") == 1)                p_MenuReveal_Button("Spitter", 307, 700);
        if (checkinventory("Spitter_Bayonet") == 1)        p_MenuReveal_Button("Spitter (Bayonet)", 308, 1000);
        if (checkinventory("Spitter_GLauncher") == 1)      p_MenuReveal_Button("Spitter (Grenade Launcher)", 309, 1000);
        if (checkinventory("Buckshot") == 1)               p_MenuReveal_Button("Buckshot", 310, 700);
        if (checkinventory("Buckshot_Chamber") == 1)       p_MenuReveal_Button("Buckshot (Chamber)", 311, 1000);
        if (checkinventory("Buckshot_Explosive") == 1)     p_MenuReveal_Button("Buckshot (Explosive)", 312, 1000);
//t3h: BUG: We check if users have Buckshot_Explosive, but then try to remove Dualshot-related stuff
//     also -- Dualshot stuff is in the other menu (below), so why here?
//        if (checkinventory("Buckshot_Explosive") == 1)     p_MenuReveal_Button("Dualshot", 326, 2600);
//        if (checkinventory("Buckshot_Explosive") == 1)     p_MenuReveal_Button("Dualshot (Razor blades)", 327, 3200);
        p_MenuReveal_Button("Advanced Weapons", 111, 0);
        p_MenuReveal_Button("New Weapons", 112, 0);
        p_MenuReveal_Button("Back", 101, 0);
    }
    if (p_MenuSelection_Category[playernumber()] == 11)     // RECYCLE ADVANCED
    {
        if (checkinventory("Launcher") == 1)               p_MenuReveal_Button("Launcher", 313, 1500);
        if (checkinventory("Launcher_Multi") == 1)         p_MenuReveal_Button("Launcher (Multi-Rocket)", 314, 2000);
        if (checkinventory("Launcher_Exploder") == 1)      p_MenuReveal_Button("Launcher (Exploder-Rocket)", 315, 2000);
        if (checkinventory("Flinger") == 1)                p_MenuReveal_Button("Flinger", 316, 1500);
        if (checkinventory("Flinger_Expander") == 1)       p_MenuReveal_Button("Flinger (Expander)", 317, 2000);
        if (checkinventory("Flinger_MinePlacer") == 1)     p_MenuReveal_Button("Flinger (Mine Placer)", 318, 2000);
        if (checkinventory("Railgun") == 1)                p_MenuReveal_Button("Railgun", 319, 1500);
        if (checkinventory("Railgun_Taser") == 1)          p_MenuReveal_Button("Railgun (Taser)", 320, 2000);
        if (checkinventory("Railgun_Slug") == 1)           p_MenuReveal_Button("Railgun (Slug)", 321, 2000);
        if (checkinventory("PlasmaGun") == 1)              p_MenuReveal_Button("Plasma Gun", 322, 1500);
        if (checkinventory("PlasmaGun_Advanced") == 1)     p_MenuReveal_Button("Plasma Gun (Advanced)", 323, 2000);
        if (checkinventory("PlasmaGun_Spread") == 1)       p_MenuReveal_Button("Plasma Gun (Spread)", 324, 2000);
        if (checkinventory("Flamer") == 1)                 p_MenuReveal_Button("Flamer", 325, 2500);
        p_MenuReveal_Button("Back", 109, 0);
    }
    if (p_MenuSelection_Category[playernumber()] == 12)     // RECYCLE NEW
    {
        if (checkinventory("Dualshot") == 1)               p_MenuReveal_Button("Dualshot", 326, 2600);
        if (checkinventory("Dualshot_Razor") == 1)         p_MenuReveal_Button("Dualshot (Razor)", 327, 3200);
        if (checkinventory("Repeater") == 1)               p_MenuReveal_Button("Repeater", 328, 2600);
        if (checkinventory("Repeater_DoubleSpeed") == 1)         p_MenuReveal_Button("Repeater (Speed x2)", 329, 3200);
        if (checkinventory("Repeater_BlastShells") == 1)         p_MenuReveal_Button("Repeater (Plasma Shells)", 330, 3200);
        p_MenuReveal_Button("Back", 109, 0);
    }
    
    if (p_MenuSelection_Category[playernumber()] == 10)     // GENETICS LAB
    {
        if (checkinventory("Inventory_Soulsphere") <= 2)
          p_MenuReveal_Button("Soulsphere", 19, 0);
        if (checkinventory("Inventory_Megasphere") <= 2)
          p_MenuReveal_Button("Megasphere", 20, 0);
        if (checkinventory("Inventory_Godsphere") == 0)
          p_MenuReveal_Button("Godsphere", 21, 0);
        if (checkinventory("Inventory_Berserk2") < 1)
          p_MenuReveal_Button("Berserk 2.0", 22, 0);
        p_MenuReveal_Button("Exit", 121, 0);
    }
    
    if (p_MenuSelection_Category[playernumber()] == 20)     // MARINE COMMAND
    {
        if (c_Techflag[48] == 1 && checkinventory("Inventory_MineDrone") < 8)
          p_MenuReveal_Button("Mine Drone", 49, 0);
        if (c_Techflag[48] == 1 && checkinventory("Inventory_SawDrone") < 8)
          p_MenuReveal_Button("Saw Drone", 50, 0);
        //if (c_Techflag[48] == 1)        p_MenuReveal_Button("Turret Drone", 51, 0);




        if (p_TankSlot[playernumber()] < 90){
       	 if (p_TankSlot[playernumber()] == 0)
       	   p_MenuReveal_Button("Purchase a War Mech", 52, 0);
       	 if (p_TankSlot[playernumber()] == 1){
      	    p_MenuReveal_Button("Enter your War Mech", 58, 0);
    	    if (p_MechUpgradeWeapons[playernumber()] == 0){
   	       p_MenuReveal_Button("Rocket Launcher upgrade", 86, 0);
 	       }
 	       if (p_MechUpgradeArmor[playernumber()] == 0){
 	         p_MenuReveal_Button("Upgrade armor by 1000 hitpoints", 91, 0);
 	       }
 	       }
   	     if (p_TankSlot[playernumber()] == 2)
   	       p_MenuReveal_Button("Repair War Mech", 70, 0);
   	     if (p_TankSlot[playernumber()] == 2)
  	        p_MenuReveal_Button("Exit War Mech", 59, 0);
	}
	else
	{
		setfont("CONFONT");
        		p_MenuReveal_Button("Your mech is still repairing...", 121, 0);
	}
        p_MenuReveal_Button("Exit", 121, 0);




    }
    
    if (p_MenuSelection_Category[playernumber()] == 51)     // BATTLEFIELD BARRIER #1
    {
        p_MenuReveal_Button("Purchase battlefield barricade, 3 min", 401, 0);
        p_MenuReveal_Button("Exit", 121, 0);
    }
    
    if (p_MenuSelection_Category[playernumber()] == 52)     // SECTOR SELECT
    {
        p_MenuReveal_Button("Teleport to Sector 1", 405, 0);
        p_MenuReveal_Button("Teleport to Sector 2", 406, 0);
        p_MenuReveal_Button("Teleport to Sector 3", 407, 0);
        p_MenuReveal_Button("Exit", 121, 0);
    }
}

// activate menu
script 155 (int l_Category)
{
    // terminate if not researched
    if (l_Category == 10 && c_Techflag[1] != 1 || l_Category == 1 && c_Techflag[2] != 1 || l_Category == 20 && c_Techflag[3] != 1)        terminate;
    
    // check active
    if (p_MenuSelection_Active[playernumber()] == 0)
    {
        // freeze the player
        setplayerproperty(0, 1, PROP_TOTALLYFROZEN);
        
        // change menu status
        p_MenuSelection_Active[playernumber()] = 2;
        
        // load menu
        p_MenuReveal(0, l_Category);
        delay(10);
        
        // detect inputs
        while(p_MenuSelection_Active[playernumber()] > 1)
        {
            // detect up input
            if (p_MenuInput() == 1)
            {
                // load menu
                p_MenuReveal(1, -1);
                while(p_MenuInput() == 1)        delay(1);
            }
            
            // detect down input
            if (p_MenuInput() == 2)
            {
                // load menu
                p_MenuReveal(2, -1);
                while(p_MenuInput() == 2)        delay(1);
            }
            
            // detect use input
            if (p_MenuInput() == 3)
            {
                // load menu
                p_MenuReveal(3, -1);
                while(p_MenuInput() == 3)        delay(1);
            }
            
            delay(1);
        }
        
        // purge
        p_MenuReveal_Purge();
        
        delay(1);
    
        // unfreeze the player
        setplayerproperty(0, 0, PROP_TOTALLYFROZEN);
        
        delay(5);
        
        // enable recall
        p_MenuSelection_Active[playernumber()] = 0;
    }
}
