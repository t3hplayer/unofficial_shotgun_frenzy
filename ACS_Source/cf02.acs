///////////////////////////////////////////////////
//      SHOTGUN FRENZY
//   a mod by Wad'a'Holic

// CF02_ACS
// map script

// top priority
#import "f_IntDB.acs"
#import "f_Tip.acs"

// minor
#import "f_SecMan.acs"
#import "f_MonAtt.acs"
#import "f_AIDRL.acs"
#import "f_FinalF.acs"
#import "f_PMen.acs"
#import "f_PHUD.acs"
#import "f_Rank.acs"
#import "f_Cred.acs"
#import "f_PStat.acs"
#import "f_StokP.acs"
#import "f_Battr.acs"
//#import "f_TaticalMap.acs"
#import "f_Core.acs"
#import "f_CfSpec.acs"

// setup techflags
script 91 OPEN
{
	// setup gametype value
	f_Gametype = 0;
	f_UseScoreSystem = 1;
	// game settings
	f_Startcash =   2500;                   // player starting cash, 2500 is the default
	c_Startcash =   0;                      // starting cash for the commander (SF maps only)
	f_Doortype =    0;                      // 0 is a normal door, 1 is a floor based door
	f_Doorspeed =   50;                     // speed of the door opening, 50 is the default
	f_GameLength =  9;                     // Gametime in minutes, +2 min after guardian warning, 28 default (30 min gametime)
	f_AISkillMultiplier = 5;               // increase in levels, higher means harder (aka: the RapeFactor variable)

	f_Cacodemons = 0;
	f_AdaptiveSpawning = 0;

        readconsole();

    c_Techflag[1] = 1;
    c_Techflag[2] = 1;
    c_Techflag[26] = 1;
    c_Techflag[27] = 1;
}

#library "cf02"
#include "zcommon.acs"



// ***************** MAP SPECIFIC *****************

// final boss
script 90 (void)
{
    music_change("D_BOSS",0);
    int ticker;
    while(ticker < 20)
    {
        spawnspot("Aracnorb", 115, 118, 0);
        if (PlayerCount() > 16 || playercountReplicate > 16){
        	spawnspot("sfCyberdemon", 199, 118, 0);
        }
        else if (PlayerCount() > 8 || playercountReplicate > 8){
        	spawnspot("Cyberbaron", 199, 118, 0);
        }
        else if (PlayerCount() > 6 || playercountReplicate > 6){
        	spawnspot("BaronOfHell", 199, 118, 0);
        }
        else if (PlayerCount() > 4 || playercountReplicate > 4){
        	spawnspot("HellKnight", 199, 118, 0);
        }
        else if (PlayerCount() > 2 || playercountReplicate > 2){
        	spawnspot("sfDemon", 199, 118, 0);
        }
        ticker++;
        delay(35 * 3);
        thing_hate(118, 104, 0);
        thing_hate(110, 104, 0);
        thing_hate(111, 104, 0);
        thing_hate(112, 104, 0);
        thing_hate(113, 104, 0);
        thing_hate(114, 104, 0);
    }
    
    while(thingcount(0, 118) > 5 || thingcount(0, 111) > 5 || thingcount(0, 112) > 5 || thingcount(0, 113) > 5 || thingcount(0, 114) > 5)
        delay(35 * 1);
    
    thing_destroy(118, 0);
    thing_destroy(111, 0);
    thing_destroy(112, 0);
    thing_destroy(113, 0);
    thing_destroy(114, 0);
    
    // endgame
    acs_execute(125, 0, 2, 0, 0);
}



int CHARGE_PERCENT = 100;

script 3 (int type)
{
	SetActivator(0); //Preventing a major disaster
	// reduce Airlock charge
	CHARGE_PERCENT = 0;
	
	// type 1
	if (type == 0)
	{
		// lower the floor
		floor_lowertolowest (2, 5);
		
		// fire away!
		delay (10*35);
		thing_projectile (1, 127, 0, 128, 0); thing_projectile (2, 127, 128, 128, 0); delay(5);
		thing_projectile (1, 127, 0, 128, 0); thing_projectile (2, 127, 128, 128, 0); delay(5);
		thing_projectile (1, 127, 0, 128, 0); thing_projectile (2, 127, 128, 128, 0); delay(5);
		thing_projectile (1, 127, 0, 128, 0); thing_projectile (2, 127, 128, 128, 0); delay(5);
		
		// return to original status
		delay (2*35);
		floor_raisetonearest (2, 5);
	}
	
	// type 2
	if (type == 1)
	{
		// close door
    ceiling_lowerandcrush(5, 100, 2);
		
		// raise ceiling
		ceiling_raisebyvalue (4, 5, 256);
		
		// fire away!
		delay (3*35);
		teleportinsector(3, 3, 4, 1, 0);
		
		delay(35*10);
		
		// start the crush
		ceiling_lowerandcrush (4, 50, 1000); delay(10);
		
		delay(25);
		thing_projectile (5, 127, 0, 0, -100);
		radius_quake(5, 10, 0, 50, 0);
		
		// return to original status
		delay (5*35);
		door_open(5, 10);
	}
	
	// wait before reactivation
	delay(35 * 7);
	
	// show image
	while(CHARGE_PERCENT < 101)
	{
    
    if (CHARGE_PERCENT == 25)
        f_TipShow("INFO", "CHARGE", "25 Percent...", 0);
    if (CHARGE_PERCENT == 50)
        f_TipShow("INFO", "CHARGE", "50 Percent...", 0);
    if (CHARGE_PERCENT == 75)
        f_TipShow("INFO", "CHARGE", "75 Percent...", 0);
    if (CHARGE_PERCENT == 95)
        f_TipShow("INFO", "CHARGE", "95 Percent...", 0);
    if (CHARGE_PERCENT == 100)
        f_TipShow("INFO", "CHARGE", "Complete!", 0);
		
		CHARGE_PERCENT ++;
		
		delay(11);
	}
	
	// ready for action!
}

// ************************************************
